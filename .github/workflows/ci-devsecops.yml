name: CI DevSecOps

on:
  push:
    branches: [ "main" ]

env:
  PYTHON_VERSION: "3.11"
  CONTAINER_IMAGE: "github_devsecops"

jobs:
  unit_test:
    name: Unit Test (pytest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade "setuptools>=78.1.1,<79.0.0"
          pip install -r dev-requirements.txt -r requirements.txt

      - name: Run pytest
        run: PYTHONPATH=. pytest -q


  sast_bandit:
    name: SAST (Bandit)
    runs-on: ubuntu-latest
    needs: [unit_test]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Install Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit

      - name: Run bandit
        run: bandit -r app -f json -o bandit-report.json

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json

  sca:
    name: SCA (pip-audit)
    runs-on: ubuntu-latest
    needs: [sast_bandit]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit
      - name: Run pip-audit
        run: |
          pip-audit -r requirements.txt -r dev-requirements.txt --strict --progress-spinner=off --format json > pip-audit-report.json
          cat pip-audit-report.json
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: pip-audit-report.json
  
  secret_scan_gitleaks:
    name: Secret Scan (Gitleaks)
    runs-on: ubuntu-latest
    needs: [sca]
    steps:
      - uses: actions/checkout@v4
      - name: Gitleaks Scan
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--no-banner --report-format=json --report-path=gitleaks-report.json --exit-code=1"
      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json
  

  build_and_push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [secret_scan_gitleaks]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set tags
        id: vars
        run: echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ env.CONTAINER_IMAGE }}:latest
            docker.io/${{ env.CONTAINER_IMAGE }}:${{ steps.vars.outputs.sha_short }}
      - name: Export built tag
        run: echo "BUILT_IMAGE=docker.io/${{ env.CONTAINER_IMAGE }}:${{ steps.vars.outputs.sha_short }}" >> $GITHUB_ENV
